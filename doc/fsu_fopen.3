.\"	$NetBSD: fsu_fopen.3,v 1.1 2009/03/23 20:54:13 stacktic Exp $
.\" from
.\"	NetBSD: fopen.3,v 1.23 2005/05/25 16:01:24 kleink Exp
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fopen.3	8.1 (Berkeley) 6/4/93
.\"
.Dd March 15, 2009
.Dt FSU_FOPEN 3
.Os
.Sh NAME
.Nm fsu_fopen 
.Nd stream open function
.Sh LIBRARY
fsu_utils Library (libfsu_utils, \-lfsu_utils)
.Sh SYNOPSIS
.In fsu_utils.h
.Ft FSU_FILE *
.Fn fsu_fopen "const char * path" "const char * mode"
.Sh DESCRIPTION
The
.Fn fsu_fopen
function
opens the file whose name is the string pointed to by
.Fa path
and associates a stream with it.
.Pp
The argument
.Fa mode
points to a string beginning with one of the following
sequences (Additional characters may follow these sequences.):
.Bl -tag -width indent
.It Dq Li r
Open for reading.
.It Dq Li r+
Open for reading and writing.
.It Dq Li w
Open for writing.
Truncate file to zero length or create file.
.It Dq Li w+
Open for reading and writing.
Truncate file to zero length or create file.
.It Dq Li a
Append; open for writing.
The file is created if it does not exist.
.It Dq Li a+
Append; open for reading and writing.
The file is created if it does not exist.
.El
.Pp
The
.Fa mode
string can also include the letter ``b'' either as a last character or
as a character between the characters in any of the two-character strings
described above.
This is strictly for compatibility with
.St -ansiC
and has no effect; the ``b'' is ignored.
.Pp
The letter ``f'' in the mode string restricts fsu_fopen to regular
files; if the file opened is not a regular file,
.Fn fsu_fopen
will fail.
This is a non
.St -ansiC
extension.
.Pp
Any created files will have mode
.Pf \\*q Dv S_IRUSR
\&|
.Dv S_IWUSR
\&|
.Dv S_IRGRP
\&|
.Dv S_IWGRP
\&|
.Dv S_IROTH
\&|
.Dv S_IWOTH Ns \\*q
.Pq Li 0666 ,
as modified by the process'
umask value (see
.Xr umask 2 ) .
.Pp
Opening a file with append mode causes all subsequent writes to it
to be forced to the then current end of file, regardless of intervening
repositioning of the stream.
.Pp
The
.Fn fsu_fopen
function initially position the stream at the start of the file
unless the file is opened with append mode,
in which case the stream is initially positioned at the end of the file.
.Sh RETURN VALUES
Upon successful completion
.Fn fsu_fopen 
returns a
.Tn FSU_FILE
pointer.
Otherwise,
.Dv NULL
is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa mode
provided to
.Fn fsu_fopen 
was invalid.
.It Bq Er EFTYPE
The file is not a regular file and the character ``f'' is specified
in the mode.
.El
.Pp
The
.Fn fsu_fopen 
function
may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr malloc 3 .
.Pp
The
.Fn fsu_fopen
function
may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr open 2 .
.Sh SEE ALSO
.Xr fsu_fclose 3 ,
.Xr fsu_fseek 3
