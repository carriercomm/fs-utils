.\"	$NetBSD: fsu_fread.3,v 1.1 2009/03/23 20:54:13 stacktic Exp $
.\" from
.\"	NetBSD: fread.3,v 1.12.38.1 2008/12/23 03:50:57 snj Exp
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)fread.3	8.2 (Berkeley) 3/8/94
.\"
.Dd March 15, 2009
.Dt FSU_FREAD 3
.Os
.Sh NAME
.Nm fsu_fread ,
.Nm fsu_fwrite
.Nd binary stream input/output
.Sh LIBRARY
fsu_utils Library (libfsu_utils, \-lfsu_utils)
.Sh SYNOPSIS
.In stdio.h
.Ft size_t
.Fn fsu_fread "void * ptr" "size_t size" "size_t nmemb" "FILE * stream"
.Ft size_t
.Fn fsu_fwrite "const void * ptr" "size_t size" "size_t nmemb" "FILE * stream"
.Sh DESCRIPTION
The function
.Fn fsu_fread
reads
.Fa nmemb
objects, each
.Fa size
bytes long, from the stream pointed to by
.Fa stream ,
storing them at the location given by
.Fa ptr .
.Pp
The function
.Fn fsu_fwrite
writes
.Fa nmemb
objects, each
.Fa size
bytes long, to the stream pointed to by
.Fa stream ,
obtaining them from the location given by
.Fa ptr .
.Pp
Mixing
.Fn fsu_fread
and
.Fn fsu_fwrite
calls without setting the file position explicitly using
.Fn fsu_fseek
between read and write or write and read operations will lead to unexpected
results because of buffering the file pointer not being set to the
expected position after each operation completes.
This behavior is allowed by ANSI C for efficiency and it will not be changed.
.Sh RETURN VALUES
The functions
.Fn fsu_fread
and
.Fn fsu_fwrite
advance the file position indicator for the stream
by the number of bytes read or written.
They return the number of objects read or written.
If
.Fa size
or
.Fa nmemb
is 0, the functions return 0 and the state of
.Fa stream
remains unchanged.
If an error occurs, or the end-of-file is reached,
the return value is a short object count (or zero).
.Pp
The function
.Fn fsu_fread
does not distinguish between end-of-file and error, and callers
must use
.Xr fsu_feof 3
and
.Xr fsu_ferror 3
to determine which occurred.
The function
.Fn fsu_fwrite
returns a value less than
.Fa nmemb
only if a write error has occurred.
.Sh SEE ALSO
.Xr fsu_utils 3
